import 'package:flutter/material.dart';
import '../Modal/new/all_clubs_response.dart';
import '../api_data_service/api_data_service.dart';

class MyListView extends StatefulWidget {
  const MyListView({super.key});

  @override
  _MyListViewState createState() => _MyListViewState();
}

class _MyListViewState extends State<MyListView> {
  final ApiService _apiService = ApiService();
  AllClubsResponse? allClubsResponse;
  List<dynamic> items = [];
  int offset = 0;
  int limit = 20;
  bool isLoading = false;
  bool hasMore = true;

  Future<void> fetchData() async {
    if (isLoading || !hasMore) return;

    setState(() {
      isLoading = true;
    });

    try {
      List<dynamic> newData = await _apiService.fetchClubs(limit: limit, offset: offset);

      setState(() {
        items.addAll(newData);
        offset += limit;
        isLoading = false;
        hasMore = newData.length == limit;
      });
    } catch (e) {
      debugPrint('Error fetching data: $e');
      setState(() {
        isLoading = false;
      });
    }
  }

  @override
  void initState() {
    super.initState();
    fetchData();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Offset Limit ListView'),
      ),
      body: NotificationListener<ScrollNotification>(
        onNotification: (ScrollNotification scrollInfo) {
          if (!isLoading && scrollInfo.metrics.pixels == scrollInfo.metrics.maxScrollExtent) {
            fetchData();
            return true;
          }
          return false;
        },
        child: ListView.builder(
          itemCount: items.length + (hasMore ? 1 : 0),
          itemBuilder: (context, index) {
            if (index < items.length) {
              return ListTile(
                title: Text('${index + 1}', style: const TextStyle(color: Colors.black)),
              );
            } else {
              if (isLoading) {
                return const Padding(
                  padding: EdgeInsets.symmetric(vertical: 16.0),
                  child: Center(child: CircularProgressIndicator()),
                );
              } else {
                return Container();
              }
            }
          },
        ),
      ),
    );
  }
}
